{"ast":null,"code":"var _jsxFileName = \"/Users/jubinsoni/Downloads/crio_stage_2_b/frontend-meme/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Loading from './Loading';\nimport Memes from './Memes';\nimport { Route, Switch } from 'react-router-dom';\nimport MemeDetails from './MemeDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst url = 'http://localhost:8000/memes/';\n\nfunction App() {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [memes, setMemes] = useState([]);\n\n  const fetchMemes = async () => {\n    setLoading(true);\n\n    try {\n      const response = await fetch(url);\n      const memes = await response.json();\n      setLoading(false);\n      setMemes(memes);\n    } catch (error) {\n      setLoading(false);\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchMemes();\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          component: () => /*#__PURE__*/_jsxDEV(Memes, {\n            memes: memes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/meme-details\",\n          component: MemeDetails\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"hCQSnrDQQUYIKGCeR4AXspW/kII=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jubinsoni/Downloads/crio_stage_2_b/frontend-meme/src/App.js"],"names":["React","useState","useEffect","Loading","Memes","Route","Switch","MemeDetails","url","App","loading","setLoading","memes","setMemes","fetchMemes","response","fetch","json","error","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,GAAG,GAAG,8BAAZ;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBV,QAAQ,CAAC,IAAD,CAArC;AACA,QAAM,CAACW,KAAD,EAAOC,QAAP,IAAmBZ,QAAQ,CAAC,EAAD,CAAjC;;AAEA,QAAMa,UAAU,GAAG,YAAY;AAC7BH,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAG;AACD,YAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACR,GAAD,CAA5B;AACA,YAAMI,KAAK,GAAG,MAAMG,QAAQ,CAACE,IAAT,EAApB;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KALD,CAKE,OAAOM,KAAP,EAAa;AACbP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAXD;;AAaAhB,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,UAAU;AACX,GAFQ,EAEP,EAFO,CAAT;;AAIA,MAAGJ,OAAH,EACA;AACE,wBACA;AAAA,6BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA;AAKD;;AACD,sBACA;AAAA,2BACE;AAAA,6BACA,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AACA,UAAA,IAAI,EAAC,GADL;AAEA,UAAA,SAAS,EAAG,mBAAM,QAAC,KAAD;AAAO,YAAA,KAAK,EAAIE;AAAhB;AAAA;AAAA;AAAA;AAAA;AAFlB;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,eAAZ;AAA4B,UAAA,SAAS,EAAEL;AAAvC;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AADF;AAAA;AAAA;AAAA;AAAA,UADA;AAaD;;GA1CQE,G;;KAAAA,G;AA4CT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Loading from './Loading'\nimport Memes from './Memes'\nimport { Route, Switch } from 'react-router-dom'\nimport MemeDetails from './MemeDetails'\n\nconst url = 'http://localhost:8000/memes/'\nfunction App() {\n  const [loading,setLoading] = useState(true);\n  const [memes,setMemes] = useState([]);\n\n  const fetchMemes = async () => {\n    setLoading(true);\n    try{\n      const response = await fetch(url);\n      const memes = await response.json();\n      setLoading(false);\n      setMemes(memes);\n    } catch (error){\n      setLoading(false);\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchMemes();\n  },[]);\n\n  if(loading)\n  {\n    return (\n    <main>\n      <Loading />\n    </main>\n    );\n  }\n  return (\n  <main>\n    <> \n    <Switch>\n      <Route \n      path='/' \n      component={ () => <Memes memes = {memes}/> } \n      />\n      <Route path='/meme-details' component={MemeDetails}/>\n    </Switch>\n    </>\n  </main>)\n  ;\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}