{"ast":null,"code":"var _jsxFileName = \"/Users/jubinsoni/Downloads/crio_stage_2_b/frontend-meme/src/setup/AllMemes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Loading from './Loading';\nimport Memes from './Memes';\nimport PostFrom from './PostForm'; //const url = 'http://localhost:8000/memes/' \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = 'http://ec2-3-7-45-215.ap-south-1.compute.amazonaws.com:8000/memes/';\n\nfunction AllMemes() {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [memes, setMemes] = useState([]);\n\n  const fetchMemes = async () => {\n    setLoading(true);\n\n    try {\n      const response = await fetch(url);\n      const memes = await response.json();\n      setLoading(false);\n      setMemes(memes);\n    } catch (error) {\n      setLoading(false);\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchMemes();\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(PostFrom, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Memes, {\n      memes: memes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this);\n}\n\n_s(AllMemes, \"hCQSnrDQQUYIKGCeR4AXspW/kII=\");\n\n_c = AllMemes;\nexport default AllMemes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllMemes\");","map":{"version":3,"sources":["/Users/jubinsoni/Downloads/crio_stage_2_b/frontend-meme/src/setup/AllMemes.js"],"names":["React","useState","useEffect","Loading","Memes","PostFrom","url","AllMemes","loading","setLoading","memes","setMemes","fetchMemes","response","fetch","json","error","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAEA;;;AACA,MAAMC,GAAG,GAAG,oEAAZ;;AACA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBR,QAAQ,CAAC,IAAD,CAArC;AACA,QAAM,CAACS,KAAD,EAAOC,QAAP,IAAmBV,QAAQ,CAAC,EAAD,CAAjC;;AAEA,QAAMW,UAAU,GAAG,YAAY;AAC7BH,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAG;AACD,YAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACR,GAAD,CAA5B;AACA,YAAMI,KAAK,GAAG,MAAMG,QAAQ,CAACE,IAAT,EAApB;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KALD,CAKE,OAAOM,KAAP,EAAa;AACbP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAXD;;AAaAd,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,UAAU;AACX,GAFQ,EAEP,EAFO,CAAT;;AAIA,MAAGJ,OAAH,EACA;AACE,wBACA;AAAA,6BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA;AAKD;;AACD,sBACA;AAAA,4BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEE;AAAd;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAMD;;GAnCQH,Q;;KAAAA,Q;AAqCT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Loading from './Loading';\nimport Memes from './Memes';\nimport PostFrom from './PostForm';\n\n//const url = 'http://localhost:8000/memes/' \nconst url = 'http://ec2-3-7-45-215.ap-south-1.compute.amazonaws.com:8000/memes/'\nfunction AllMemes() {\n  const [loading,setLoading] = useState(true);\n  const [memes,setMemes] = useState([]);\n\n  const fetchMemes = async () => {\n    setLoading(true);\n    try{\n      const response = await fetch(url);\n      const memes = await response.json();\n      setLoading(false);\n      setMemes(memes);\n    } catch (error){\n      setLoading(false);\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchMemes();\n  },[]);\n\n  if(loading)\n  {\n    return (\n    <main>\n      <Loading />\n    </main>\n    );\n  }\n  return (\n  <main>\n    <PostFrom />\n    <Memes memes={memes} />\n  </main>)\n;\n}\n\nexport default AllMemes"]},"metadata":{},"sourceType":"module"}